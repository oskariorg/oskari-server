###############################################################################
## This file contains reasonable defaults for configuring Oskari.
## To override any of these add a file named 'oskari-ext.properties' in classpath
## with the same property key as used here
###############################################################################

# set development to false or comment it out to load using minified javascript
# (requires minified version of the javascript to be compiled and servlet init-param to set the version to load)
development=true
# Client version to use in links if development = false
oskari.client.version=${project.version}
# set to true to get database populated with initial demo content
oskari.init.db=true

##################################
# DB connection parameters
##################################

db.jndi.name=jdbc/OskariPool
# Defines database driver used for Oskari content
db.jndi.driverClassName=org.postgresql.Driver
# Defines database connection url for Oskari content
db.url=jdbc:postgresql://192.168.0.64:5678/hsy_oskaridb
db.username=postgres
db.password=sergtsoP
db.status_table=oskari_status
db.script.locations=/flyway/oskari

# mark any addition module property tokens so we can check/add them automagically
db.additional.modules=myplaces,analysis,userlayer

# defaults flyway tables and scripts-locations like this if not configured/module
# db.[module].status_table=oskari_status[_module]
# db.[module].script.locations=/flyway/[module]

# jdbc/omat_paikatPool
db.myplaces.jndi.name=jdbc/OskariPool
#db.myplaces.url=
#db.myplaces.username=
#db.myplaces.password=

# jdbc/analysisPool
db.analysis.jndi.name=jdbc/OskariPool
#db.analysis.url=
#db.analysis.username=
#db.analysis.password=

# jdbc/userlayerPool
db.userlayer.jndi.name=jdbc/OskariPool
#db.userlayer.url=
#db.userlayer.username=
#db.userlayer.password=
##################################

##################################
# Map services environment configurations
##################################
# domain to use if paths are relative
oskari.domain=http://localhost:2373

# Start the server in this port (defaults to 2373)
oskari.server.port=2373

# path for incoming calls to access map
oskari.map.url=/

# url path to call for ajax requests/action routes for map
oskari.ajax.url.prefix=/action?

# session token name
oskari.cookie.session=JSESSIONID

# backend node token name
oskari.cookie.route=ROUTEID

# Logger implementation - SystemLogger logs into System.out/err, replace with logging implementation of your choice
oskari.logger=fi.nls.oskari.log.SystemLogger

# UserService implementation - create own implementation to integrate into actual systems and provide feedback for missing interface methods.
oskari.user.service=fi.nls.oskari.user.DatabaseUserService

# Default prefix for maplayer urls when using 'secure' urls (layer url is prefixed with this after removing original protocol)
# change to something like /secure/ to enable proxying http-only services with apache/nginx or https:// to just replace the protocol
maplayer.wmsurl.secure=

# redis configuration
redis.hostname=localhost
redis.port=6379
redis.pool.size=100
##################################

##################################
# Configuring search channel implementations for search services.
# Properties are prefixed with 'search.channel.[CHANNEL ID].':
#   className indicates the implementation class
#   other properties are passed on to the implementation class.
##################################
# OpenStreetMap search channel settings
search.channel.OPENSTREETMAP_CHANNEL.service.url=http://nominatim.openstreetmap.org/search

# comma-separated list of search channel ids that should be registered for search service
# defaults to all found search channels, only use to limit search channels that can be used
#search.channels=OPENSTREETMAP_CHANNEL

# comma-separated list of id for search channel that will be used (defaulted to) if none are explicitly configured
#search.channels.default=OPENSTREETMAP_CHANNEL
##################################

##################################
# Configurations for action handlers
##################################
# comma-separated list of search channel ids used by GetSearchResult
#actionhandler.GetSearchResult.channels=OPENSTREETMAP_CHANNEL

# bundles that are added on runtime to view if user has one of configured role
actionhandler.GetAppSetup.dynamic.bundles = admin-layerselector, admin-layerrights, admin-users, admin

# Linking dynamic bundles based on user roles
# Properties are named 'actionhandler.GetAppSetup.dynamic.[BUNDLE ID].roles'
#   with value as comma-separated list of role names that should be served the bundle
actionhandler.GetAppSetup.dynamic.bundle.admin-layerrights.roles = Admin
actionhandler.GetAppSetup.dynamic.bundle.admin-layerselector.roles = Admin
actionhandler.GetAppSetup.dynamic.bundle.admin-users.roles = Admin
actionhandler.GetAppSetup.dynamic.bundle.admin.roles = Admin

# comma-separated list of bundles that are whitelisted for publishing
actionhandler.AppSetup.bundles.simple=maprotator,maplegend
##################################

##################################
# Configurations specific to database content
##################################
# Used to configure a template view for publishing maps, defaults to view with id 1
view.template.publish=1

# Administrator role - special handling for action routes (deleting map layers and such)
oskari.user.role.admin=Admin
# Logged in user role - default role when creating users
oskari.user.role.loggedIn = User


##################################
# myplaces configuration
##################################
myplaces.ows.url=http://localhost:8082/geoserver/oskari/ows?
myplaces.wms.url=http://localhost:8082/geoserver/oskari/wms?buffer=128&tiled=yes&tilesorigin=0,0&CQL_FILTER=
myplaces.user=admin
myplaces.password=geoserver
# Base WFS layer id for myplaces (portti_maplayer and portti_wfs_layer tables)
# Find correct layer id from database when my_places wfs base layer has been inserted
myplaces.baselayer.id=-1
# My places namespace
myplaces.xmlns=http://www.oskari.org
# My places namespace prefix
myplaces.xmlns.prefix=oskari
##################################

##################################
# proxy services
##################################
oskari.proxyservices=print, wfsquery, myplacestile

# relative urls and prefixed with 'oskari.domain' property
oskari.proxy.print.url=/portti-map-imaging/imaging/service/thumbnail/extent.jsonp
oskari.proxy.print.params=zoomLevel,coord,mapLayers,showMarker,forceCache,noSavedState,pageSize
oskari.proxy.print.header.Content-Type=application/json; charset=UTF-8

oskari.proxy.wfsquery.handler=fi.nls.oskari.service.WFSQueryProxyHandler
oskari.proxy.wfsquery.header.Content-Type=text/xml

oskari.proxy.myplacestile.url=/geoserver/wms?CQL_FILTER=
oskari.proxy.myplacestile.handler=fi.nls.oskari.proxy.MyPlacesProxyHandler
oskari.proxy.myplacestile.user=
oskari.proxy.myplacestile.pass=
##################################

# Quartz scheduler configuration

org.quartz.scheduler.instanceName=OskariScheduler
org.quartz.threadPool.threadCount=1
org.quartz.scheduler.skipUpdateCheck=true
org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore

# Oskari Scheduler configuration

#oskari.scheduler.jobs=page_google
#oskari.scheduler.job.page_google.cronLine=0 * * * *
#oskari.scheduler.job.page_google.className=com.my.JobClass
#oskari.scheduler.job.page_google.methodName=myBatchMethod


##################################
# GFI content additional whitelist tags
##################################

# Default whitelist tags:
#   "a", "b", "blockquote", "br", "caption", "cite", "code", "col",
#   "colgroup", "dd", "div", "dl", "dt", "em", "h1", "h2", "h3", "h4", "h5", "h6",
#   "i", "img", "li", "ol", "p", "pre", "q", "small", "span", "strike", "strong",
#   "sub", "sup", "table", "tbody", "td", "tfoot", "th", "thead", "tr", "u", "ul"
# Default whitelist attributes for specific tags:
#    "a": "href", "title"
#    "blockquote": "cite"
#    "col": "span", "width"
#    "colgroup": "span", "width"
#    "img": "align", "alt", "height", "src", "title", "width"
#    "ol": "start", "type"
#    "q": "cite"
#    "table": "summary", "width"
#    "td": "abbr", "axis", "colspan", "rowspan", "width"
#    "th": "abbr", "axis", "colspan", "rowspan", "scope","width"
#    "ul": "type"
# Default whitelist protocols for specific tags and attributes
#    "a", "href": "ftp", "http", "https", "mailto"
#    "blockquote", "cite": "http", "https"
#    "cite", "cite": "http", "https"
#    "img", "src": "http", "https"
#    "q", "cite": "http", "https"
# Check changes for the relaxed whitelist at
# https://github.com/jhy/jsoup/blob/master/src/main/java/org/jsoup/safety/Whitelist.java
#
# Additional tags
gficontent.whitelist = button,datalist,fieldset,form,input,keygen,label,legend,option,optgroup,output,select,textarea
# Additional attributes for all tags (tag=:all, allowed attr=class, style)
gficontent.whitelist.attr=class,style
# Additional attributes for specific tags (tag=a, allowed attr=hreflang, target)
gficontent.whitelist.attr.a=hreflang,target
# Additional protocols for specifig tags and attributes (tag=img, attr=src, allowed protocol=ftp)
gficontent.whitelist.attr.img.protocol.src=ftp

#############################
# Additional jsp response headers
# oskari.page.header.<HTTP_HEADER>=<HEADER_VALUE>
#############################
oskari.page.header.X-UA-Compatible = IE=edge

