app.tomcat.context.antiJarLocking=true
app.tomcat.context.useNaming=true
app.tomcat.context.unpackWAR=true
app.tomcat.context.disableURLRewriting=true
app.tomcat.context.useHTTPOnly=true

db.jndi.auth=Container
db.jndi.name=jdbc/OskariPool
db.jndi.initialsize=2
db.jndi.maxactive=20
db.jndi.maxidle=10
db.jndi.maxwait=500
db.jndi.type=javax.sql.DataSource
db.jndi.driverClassName=org.hsqldb.jdbcDriver
db.url=jdbc:hsqldb:file:data/oskaridb
db.username=<not set>
db.password=<not set>

oskari.client.version=ADD_VERSION_NUMBER_HERE
# set development to false or comment it out to load using minified javascript
# (requires minified version of the javascript to be compiled and set "oskari.client.version" to the version)
oskari.client.development=true

# set to true to get database populated with initial demo content
oskari.init.db=true

# Logger implementation - SystemLogger logs into System.out/err, replace with logging implementation of your choice
oskari.logger.className=fi.nls.oskari.log.SystemLogger

# url path to call for ajax requests/action routes
oskari.ajax.url.prefix=/?

# UserService implementation - create own implementation to integrate into actual systems and provide feedback for missing interface methods.
oskari.user.service.className=fi.nls.oskari.user.StandaloneUserService

# Administrator role - special handling for action routes (deleting map layers and such)
oskari.user.role.admin=Admin

# Used to configure a template view for publishing maps
view.template.publish=3

# redis
redis.hostname=localhost
redis.port=6379
redis.pool.size=100

##############################
# proxy services
##############################
oskari.proxyservices = print, wfsquery, myplacestile

oskari.proxy.print.url=http://localhost:8250/portti-map-imaging-0.0.1-SNAPSHOT/imaging/service/thumbnail/extent.jsonp
oskari.proxy.print.params=zoomLevel,coord,mapLayers,showMarker,forceCache,noSavedState,pageSize
oskari.proxy.print.header.Content-Type=application/json; charset=UTF-8

oskari.proxy.wfsquery.handler=fi.nls.oskari.service.WFSQueryProxyHandler
oskari.proxy.wfsquery.header.Content-Type=text/xml

oskari.proxy.myplacestile.url=http://localhost:8080/geoserver/wms?CQL_FILTER=
oskari.proxy.myplacestile.handler=fi.nls.oskari.proxy.MyPlacesProxyHandler
oskari.proxy.myplacestile.user=geoserver
oskari.proxy.myplacestile.pass=geoserver

# My places query url
# MyPlacesBundleHandler.java, GeoServerProxyService.java
myplaces.ows.url=http://localhost:8080/geoserver/ows/ows?
# MapFullHandler.java, MyPlacesHandler.java
myplaces.wms.url=http://localhost:8080/geoserver/wms?buffer=128&tiled=yes&tilesorigin=0,0&CQL_FILTER=
myplaces.user=geoserver
myplaces.password=geoserver

